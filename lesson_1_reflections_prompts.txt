How did viewing a diff between two versions of a file help you see the bug that was introduced?
It allowed me to see where changes had occured that my have affected my code and introduced unknown errors.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You can see what you has previously done and how you did it. What changes you made to where and see what mistakes might have been made or how your progrmaming has developed.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Commits broken up logically. But isn't auto saved, so if you forget, you're fucked.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Code is interated. While most google docs and drop box files are not interalted.

How can you use the commands git log and git diff to view the history of files?
You can use the git log in the folder to see a list of all commits and you can use git diff and two IDs to see the changes that were made.

How might using version control make you more confident to make changes that could break something?
You are always able to revert back to a previously working state.

Now that you have your workspace set up, what do you want to try using Git for?
Javascript version control on the udacity course
